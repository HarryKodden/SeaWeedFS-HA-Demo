upstream filer_servers {
    server filer1:8888;
    server filer2:8888 backup;
}

upstream s3_servers {
    server filer1:8333;
    server filer2:8333 backup;
}

# Master servers
upstream master1_server {
    server master1:9333;
}

upstream master2_server {
    server master2:9333;
}

upstream master3_server {
    server master3:9333;
}

# Volume servers
upstream volume1_server {
    server volume1:8080;
}

upstream volume2_server {
    server volume2:8080;
}

upstream volume3_server {
    server volume3:8080;
}

# API server for cluster management
upstream api {
    server api:8080;
}

server {
    listen 80;
    
    # Global timeout settings
    client_max_body_size 100M;
    client_body_timeout 300s;
    client_header_timeout 60s;
    send_timeout 300s;
    keepalive_timeout 300s;
    keepalive_requests 1000;
    
    # Buffer settings to handle large responses
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    location / {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Serve the main dashboard
        root /etc/nginx/html;
        try_files /cluster.html =404;
        
        # Add cache control for HTML files
        location ~* \.(html)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
        
        # Allow API calls without additional auth (since nginx handles it)
        location /api/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Prevent broken pipe errors
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Extended timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            client_body_timeout 120s;
            send_timeout 120s;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        }
    }

    # S3 operations endpoint
    location /s3-operations {
        proxy_pass http://api/s3-operations;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No authentication required for dashboard S3 operations
        # auth_basic "SeaweedFS API";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        client_body_timeout 120s;
        send_timeout 120s;
    }

    # S3 operations endpoint (legacy support)
    location /filer/s3/logs {
        proxy_pass http://api/s3-operations;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Basic authentication
        auth_basic "SeaweedFS API";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Individual filer server access
    location /filer/1/ {
        proxy_pass http://filer1:8888/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        client_max_body_size 100M;
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }

    location /filer/2/ {
        proxy_pass http://filer2:8888/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        client_max_body_size 100M;
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }

    # Individual master server access
    location /master/1/ {
        proxy_pass http://master1:9333/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }

    location /master/2/ {
        proxy_pass http://master2:9333/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }

    location /master/3/ {
        proxy_pass http://master3:9333/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }

    # Dashboard endpoint
    location /dashboard/ {
        # Basic authentication for dashboard
        # auth_basic "SeaweedFS Dashboard";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        
        alias /etc/nginx/html/;
        index cluster.html;
        try_files $uri $uri/ /cluster.html;
    }

    # Main dashboard route
    location = / {
        # Basic authentication for dashboard
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html;
        index cluster.html;
        try_files $uri $uri/ /cluster.html;
    }

    # Master HTML pages
    location = /master/1/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/master;
        try_files /master1.html =404;
    }

    location = /master/2/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/master;
        try_files /master2.html =404;
    }

    location = /master/3/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/master;
        try_files /master3.html =404;
    }

    # Volume HTML pages
    location = /volume/1/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/volume;
        try_files /volume1.html =404;
    }

    location = /volume/2/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/volume;
        try_files /volume2.html =404;
    }

    location = /volume/3/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/volume;
        try_files /volume3.html =404;
    }

    # Filer HTML pages
    location = /filer/1/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/filer;
        try_files /filer1.html =404;
    }

    location = /filer/2/ {
        auth_basic "SeaweedFS Cluster Admin";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        root /etc/nginx/html/filer;
        try_files /filer2.html =404;
    }
}

server {
    listen 8080;

    location / {
        proxy_pass http://filer_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Prevent broken pipe errors
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        client_max_body_size 100M;

        # Extended timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        client_body_timeout 300s;
        send_timeout 300s;
    }
}

